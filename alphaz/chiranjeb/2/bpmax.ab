affine bpmax {N | N > 1}
input
	float FA {i,j | 0<=i,j<N };
	float FB {i,j | 0<=i,j<N };
	double DA {i,j | 0<=i,j<N };
	double DB {i,j | 0<=i,j<N };
output
	float FMIN {i,j | 0<=i,j<N };
	float FMAX {i,j | 0<=i,j<N };
	double DMIN {i,j | 0<=i,j<N };
	double DMAX {i,j | 0<=i,j<N };
let
	FMIN[i,j] = reduce(min, [k], FA[i,k]*FB[k,j]);
	FMAX[i,j] = reduce(max, [k], FA[i,k]*FB[k,j]);
	DMIN[i,j] = reduce(min, [k], DA[i,k]*DB[k,j]);
	DMAX[i,j] = reduce(max, [k], DA[i,k]*DB[k,j]);
.