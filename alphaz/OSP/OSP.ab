affine OSP {N|N>0}
input
   int P {i|0<=i<=N}; // length of p is N + 1 where N is number of matrices
output
   int M {i,j|1<=i<=N && 1<=j<=N};
   int S {i,j|1<=i<=N-1 && 2<=j<=N};
let
	M[i,j] = case
	  {|j<i}: 0;
      {|i==j} : 0;
      {|i<j} : reduce(min, (i,j,k -> i,j), {|i<=k<j}: M[i,k]+M[k+1,j]+P[i-1]*P[k]*P[j]);
   esac;
   S[i,j] = case
	  {|j<i}: 0;
      {|i==j} : 0;
      {|i<j} : reduce(min, (i,j,k -> i,j), {|i<=k<j}: M[i,k]+M[k+1,j]+P[i-1]*P[k]*P[j]);
   esac;
.